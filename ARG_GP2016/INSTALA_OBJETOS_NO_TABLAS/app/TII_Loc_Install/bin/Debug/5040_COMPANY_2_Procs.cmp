/*Count : 23*/
 
set DATEFORMAT ymd 
GO 
 
/*Begin_Latam_TBL_Upgrade*/
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[Latam_TBL_Upgrade]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[Latam_TBL_Upgrade]
GO

 create   procedure Latam_TBL_Upgrade 
  @TableName varchar(50),
  @Option int out 
 as 
 begin 
  set nocount on 
  declare @TName    varchar(8000), 
   @PName     varchar(8000), 
   @PType     char(8000), 
   @SQL varchar(8000), 
   @RetCode integer, 
   @COLUMN_NAME varchar(8000), 
   @COLUMN_NAMESTRTO  varchar(8000), 
   @COLUMN_NAMESTRFR varchar(8000), 
   @Cnt int 
  select  @PType    = '''P''', 
   @SQL     = ' ', 
   @COLUMN_NAMESTRTO = ' ',
   @COLUMN_NAMESTRFR = ' ' 
  if ltrim(rtrim(@TableName)) is null  or len(ltrim(rtrim(@TableName))) = 0 
  return 
  set @SQL = 'declare CTable cursor static for 
   select name from sysobjects 
   where name = '''+@TableName+''' and xtype = ''U''' 
if @Option = 0  
begin 
 exec(@SQL) 
 open CTable 
 fetch next from CTable into @TName 
 while @@fetch_status = 0 
 begin 
  set @Option = 2 
   
  exec ('select * into '+ @TName+'Dum from '+@TName) 
   
  set @SQL = 'declare CTableP cursor static for 
  select name from sysobjects 
  where name like ''zDP_'+@TName+ '%'' and xtype = '+ @PType 
  exec(@SQL) 
  open CTableP 
  fetch next from CTableP into @PName 
  while @@fetch_status = 0 
  begin 
   set @SQL = 'drop procedure '+ @PName 
   exec(@SQL) 
   fetch next from CTableP into @PName 
  end 
  close CTableP 
  deallocate CTableP 
   
  set @SQL = 'drop table '+ @TName 
  exec(@SQL) 
  fetch next from CTable into @TName 
 end 
 close CTable 
 deallocate CTable 
end 
else if @Option = 1  
begin 
 exec(@SQL) 
  open CTable 
  fetch next from CTable into @TName 
  while @@fetch_status = 0 
  begin 
   set @COLUMN_NAME    = ' ' 
   set @COLUMN_NAMESTRTO = ' ' 
   declare CTableC cursor static for 
   select COLUMN_NAME from INFORMATION_SCHEMA.COLUMNS 
   where TABLE_NAME = @TName 
   open CTableC 
   fetch next from CTableC into @COLUMN_NAME 
   while @@fetch_status = 0 
   begin 
    if @COLUMN_NAME <> 'DEX_ROW_ID' 
    begin 
     select @Cnt  = count(*) from INFORMATION_SCHEMA.COLUMNS 
      where TABLE_NAME = @TName+'Dum' and COLUMN_NAME = @COLUMN_NAME 
     if @Cnt = 1 
     begin 
      if len(rtrim(ltrim(@COLUMN_NAMESTRTO))) = 0 
      begin 
        set @COLUMN_NAMESTRTO = @COLUMN_NAME 
        set @COLUMN_NAMESTRFR = @COLUMN_NAME 
      end 
      else 
      begin 
       set @COLUMN_NAMESTRTO = @COLUMN_NAMESTRTO+',' + @COLUMN_NAME 
        set @COLUMN_NAMESTRFR = @COLUMN_NAMESTRFR+',' + @COLUMN_NAME 
      end 
     end 
    end 
    fetch next from CTableC into @COLUMN_NAME 
  end 
   close CTableC 
   deallocate CTableC 
  exec ('insert into '+@TName+' (' + @COLUMN_NAMESTRTO + ' ) 
   select ' + @COLUMN_NAMESTRFR  + '  from '+@TName+'Dum')
  set @SQL = 'drop table ' + @TName+'Dum'
  exec(@SQL)
   fetch next from CTable into @TName 
  end 
  close CTable 
  deallocate CTable 
end 
set nocount off 
end 

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[Latam_TBL_Upgrade] TO [DYNGRP] 
GO 

/*End_Latam_TBL_Upgrade*/
/*Begin_SD_Calculate_Shipped_Not_Invoiced*/
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SD_Calculate_Shipped_Not_Invoiced]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SD_Calculate_Shipped_Not_Invoiced]
GO

 CREATE PROCEDURE [dbo].[SD_Calculate_Shipped_Not_Invoiced]
(   
@ITEMNMBR VARCHAR (31) ,   
@LOCNCODE VARCHAR (11) ,   
@ShpNotInv NUMERIC (19, 5) output   
)   
AS   
BEGIN   
 DECLARE @PosAdj NUMERIC (19, 5), @NegAdj NUMERIC (19, 5)
 
 SELECT @NegAdj = ISNULL(SUM(SOP_LINE_WORK.ATYALLOC * IV_UofM_SETP_DTL.QTYBSUOM),0) FROM   
 SD10200 SD_Inv_Adj  
 INNER JOIN SOP10100 SOP_HDR_WORK ON (  
           SD_Inv_Adj.SOPNUMBE = SOP_HDR_WORK.SOPNUMBE AND   
           SOP_HDR_WORK.PSTGSTUS = 0 AND  
           SOP_HDR_WORK.VOIDSTTS = 0 AND  
           (SOP_HDR_WORK.SOPTYPE = 3 OR SOP_HDR_WORK.SOPTYPE = 6)  
          )  
 INNER JOIN SOP10200 SOP_LINE_WORK ON (  
           SOP_LINE_WORK.SOPNUMBE = SOP_HDR_WORK.SOPNUMBE AND  
           SOP_LINE_WORK.LNITMSEQ = SD_Inv_Adj.LNITMSEQ AND  
           SOP_LINE_WORK.CMPNTSEQ = SD_Inv_Adj.CMPNTSEQ             
           ) 
 INNER JOIN IV00101 IV_Item_MSTR ON IV_Item_MSTR.ITEMNMBR = SOP_LINE_WORK.ITEMNMBR  
 INNER JOIN IV40202 IV_UofM_SETP_DTL ON IV_Item_MSTR.UOMSCHDL = IV_UofM_SETP_DTL.UOMSCHDL  
 WHERE IV_UofM_SETP_DTL.QTYBSUOM <> 0 AND   
   IV_UofM_SETP_DTL.UOFM = SOP_LINE_WORK.UOFM AND  
   SD_Inv_Adj.ITEMNMBR = @ITEMNMBR AND  
   SD_Inv_Adj.LOCNCODE = @LOCNCODE AND   
   SD_Inv_Adj.SDADJTYPE = 0  


SELECT @PosAdj = ISNULL(SUM(SOP_LINE_WORK.ATYALLOC * IV_UofM_SETP_DTL.QTYBSUOM),0) FROM   
 SD10200 SD_Inv_Adj  
 INNER JOIN SOP10100 SOP_HDR_WORK ON (  
           SD_Inv_Adj.SOPNUMBE = SOP_HDR_WORK.SOPNUMBE AND   
           SOP_HDR_WORK.PSTGSTUS = 0 AND  
           SOP_HDR_WORK.VOIDSTTS = 0 AND  
           (SOP_HDR_WORK.SOPTYPE = 3 OR SOP_HDR_WORK.SOPTYPE = 6)  
          )  
 INNER JOIN SOP10200 SOP_LINE_WORK ON (  
           SOP_LINE_WORK.SOPNUMBE = SOP_HDR_WORK.SOPNUMBE AND  
           SOP_LINE_WORK.LNITMSEQ = SD_Inv_Adj.LNITMSEQ AND  
           SOP_LINE_WORK.CMPNTSEQ = SD_Inv_Adj.CMPNTSEQ             
           ) 
 INNER JOIN IV00101 IV_Item_MSTR ON IV_Item_MSTR.ITEMNMBR = SOP_LINE_WORK.ITEMNMBR  
 INNER JOIN IV40202 IV_UofM_SETP_DTL ON IV_Item_MSTR.UOMSCHDL = IV_UofM_SETP_DTL.UOMSCHDL  
 WHERE IV_UofM_SETP_DTL.QTYBSUOM <> 0 AND   
   IV_UofM_SETP_DTL.UOFM = SOP_LINE_WORK.UOFM AND  
   SD_Inv_Adj.ITEMNMBR = @ITEMNMBR AND  
   SD_Inv_Adj.LOCNCODE = @LOCNCODE AND   
   SD_Inv_Adj.SDADJTYPE <> 0  

 SELECT @ShpNotInv = @NegAdj - @PosAdj
END    

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[SD_Calculate_Shipped_Not_Invoiced] TO [DYNGRP] 
GO 

/*End_SD_Calculate_Shipped_Not_Invoiced*/
/*Begin_SD_Combine_Orders_To_Invoice*/
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SD_Combine_Orders_To_Invoice]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SD_Combine_Orders_To_Invoice]
GO

CREATE PROCEDURE SD_Combine_Orders_To_Invoice 
( 
 @SOPNUMBE VARCHAR  (21) , 
 @TableName VARCHAR  (50) 
) 
AS 
BEGIN 
 declare @ExecString  varchar (4000) 
 declare @CommonString1 varchar (4000) 
 declare @CommonString2 varchar (4000) 
 declare @CommonString3 varchar (4000) 
 if exists(select * from tempdb..sysobjects where name = '##sopBulkConfirmTemp' and type = 'U')   
 drop table ##sopBulkConfirmTemp  
 select * into ##sopBulkConfirmTemp from SOP10200 where 1 = 2 
 alter table ##sopBulkConfirmTemp drop column DEX_ROW_ID 
 alter table ##sopBulkConfirmTemp add DEX_ROW_ID int IDENTITY(16384,16384) 
 select @CommonString1 = 'ITEMDESC,NONINVEN,DROPSHIP,UOFM,LOCNCODE,UNITCOST,ORUNTCST,UNITPRCE, 
 ORUNTPRC,XTNDPRCE,OXTNDPRC,REMPRICE,OREPRICE,EXTDCOST,OREXTCST,MRKDNAMT,ORMRKDAM,MRKDNPCT,MRKDNTYP, 
 INVINDX,CSLSINDX,SLSINDX,MKDNINDX,RTNSINDX,INUSINDX,INSRINDX,DMGDINDX,ITMTSHID,IVITMTXB,BKTSLSAM, 
 ORBKTSLS,TAXAMNT,ORTAXAMT,TXBTXAMT,OTAXTAMT,BSIVCTTL,TRDISAMT,ORTDISAM,DISCSALE,ORDAVSLS,QUANTITY, 
 ATYALLOC,QTYINSVC,QTYINUSE,QTYDMGED,QTYRTRND,QTYONHND,QTYCANCE,QTYCANOT,QTYONPO,QTYORDER,QTYPRBAC, 
 QTYPRBOO,QTYPRINV,QTYPRORD,QTYPRVRECVD,QTYRECVD,QTYREMAI,QTYREMBO,QTYTBAOR,QTYTOINV,QTYTORDR,QTYFULFI, 
 QTYSLCTD,QTYBSUOM,EXTQTYAL,EXTQTYSEL,' 
 select @CommonString2 = ',FUFILDAT,ACTLSHIP,SHIPMTHD,SALSTERR,SLPRSNID,PRCLEVEL,COMMNTID,BRKFLD1, 
 BRKFLD2,BRKFLD3,CURRNIDX,TRXSORCE,SOPLNERR,ORGSEQNM,ITEMCODE,PURCHSTAT,DECPLQTY,DECPLCUR,ODECPLCU,QTYTOSHP, 
 XFRSHDOC,EXCEPTIONALDEMAND,TAXSCHID,TXSCHSRC,' 
 select @CommonString3 = ',ShipToName,CNTCPRSN,ADDRESS1,ADDRESS2,ADDRESS3,CITY, 
 STATE,ZIPCODE,CCode,COUNTRY,PHONE1,PHONE2,PHONE3,FAXNUMBR,Flags,BackoutTradeDisc,OrigBackoutTradeDisc,GPSFOINTEGRATIONID, 
 INTEGRATIONSOURCE,INTEGRATIONID,CONTNBR,CONTLNSEQNBR,CONTSTARTDTE,CONTENDDTE,CONTITEMNBR,CONTSERIALNBR,BULKPICKPRNT,INDPICKPRNT,ISLINEINTRA, 
 SOFULFILLMENTBIN,MULTIPLEBINS,DEX_ROW_TS'  
 select @ExecString = 'insert into ##sopBulkConfirmTemp  
 ( 
  SOPTYPE,SOPNUMBE,LNITMSEQ,CMPNTSEQ,ITEMNMBR, 
  ' + @CommonString1 + ' ReqShipDate ' + @CommonString2 + ' PRSTADCD ' + @CommonString3 + ' 
 ) 
 SELECT 
 3 AS SOPTYPE,'''+ @SOPNUMBE +''' AS SOPNUMBE,B.LNITMSEQ,B.CMPNTSEQ,B.ITEMNMBR, 
  ' + @CommonString1 + ' B.ReqShipDate ' + @CommonString2 + ' B.PRSTADCD ' + @CommonString3 + ' FROM ' + @TableName +  
 ' A INNER JOIN SOP10200 B on A.SOPNUMBE = B.SOPNUMBE  and 
 A.SOPTYPE = B.SOPTYPE where A.MKTOPROC = 1 ORDER BY A.DEX_ROW_ID' 
 EXEC(@ExecString) 
 select @ExecString = 'insert into SOP10200  
 ( 
  SOPTYPE,SOPNUMBE,LNITMSEQ,CMPNTSEQ,ITEMNMBR, 
  ' + @CommonString1 +' ReqShipDate ' + @CommonString2 + ' PRSTADCD ' + @CommonString3 + ' 
 ) 
 select  SOPTYPE,SOPNUMBE,DEX_ROW_ID as LNITMSEQ,CMPNTSEQ,ITEMNMBR, 
 ' + @CommonString1 + ' ReqShipDate ' + @CommonString2 + ' PRSTADCD ' + @CommonString3 + ' from ##sopBulkConfirmTemp where 1 = 2'   
 EXEC ( @ExecString ) 
 select @CommonString1 = 'insert into SOP10105 ( 
  SOPTYPE,SOPNUMBE,LNITMSEQ,TAXDTLID,ACTINDX,BKOUTTAX, 
  TXABLETX,STAXAMNT,ORSLSTAX,FRTTXAMT,ORFRTTAX,MSCTXAMT, 
  ORMSCTAX,TAXDTSLS,ORTOTSLS,TDTTXSLS,ORTXSLS,TXDTOTTX, 
  OTTAXPON,DELETE1,CURRNIDX,TRXSORCE )' 
 select @CommonString2 = 'A.TAXDTLID,B.ACTINDX,MAX(BKOUTTAX) as BKOUTTAX, MAX(TXABLETX) as TXABLETX,sum(STAXAMNT) as STAXAMNT, 
  sum(ORSLSTAX) as ORSLSTAX,sum(FRTTXAMT) as FRTTXAMT,sum(ORFRTTAX) as ORFRTTAX,sum(MSCTXAMT) as MSCTXAMT, 
  sum(ORMSCTAX) as ORMSCTAX,sum(TAXDTSLS) as TAXDTSLS,sum(ORTOTSLS) as ORTOTSLS, 
  sum(TDTTXSLS) as TDTTXSLS,sum(ORTXSLS) as ORTXSLS,sum(TXDTOTTX) as TXDTOTTX, 
  sum(OTTAXPON) as OTTAXPON,MAX(DELETE1) as DELETE1,MAX(CURRNIDX) as CURRNIDX, 
  MAX(TRXSORCE) as TRXSORCE from SOP10105 A inner join TX00201 B on A.TAXDTLID = B.TAXDTLID  
  inner join ' + @TableName + ' C on A.SOPNUMBE = C.SOPNUMBE and A.SOPTYPE = C.SOPTYPE 
  where C.MKTOPROC = 1 and A.LNITMSEQ = 0 group by A.TAXDTLID, B.ACTINDX ' 
 select @ExecString = @CommonString1 + 'select 3 as SOPTYPE,''' + @SOPNUMBE + ''' as SOPNUMBE, 0 as LNITMSEQ,' + @CommonString2 
 EXEC ( @ExecString ) 
 if exists(select * from tempdb..sysobjects where name = '##sopBulkConfirmTemp' and type = 'U')   
 drop table ##sopBulkConfirmTemp  
 select @ExecString = 'select  
  ''' + @SOPNUMBE + ''' as SOPNUMBE,sum(DISCFRGT) as DISCFRGT,sum(ORDAVFRT) as ORDAVFRT, 
  sum(ORDAVMSC) as ORDAVMSC,sum(DISAVAMT) as DISAVAMT, 
  min(FUFILDAT) as FUFILDAT,min(ACTLSHIP) as ACTLSHIP,max(DISCDATE) as DISCDATE, 
  min(PRCLEVEL) as PRCLEVEL,min(LOCNCODE) as LOCNCODE,''' + @SOPNUMBE + ''' as PCKSLPNO, 
  ''' + @SOPNUMBE + ''' as PICTICNU,1 as TXENGCLD,12 as Flags,7 as SOPSTATUS, 
  sum(DISCMISC) as DISCMISC, min(CURNCYID) as CURNCYID,min(CURRNIDX) as CURRNIDX, 
  min(RATETPID) as RATETPID, min(XCHGRATE) as XCHGRATE, min(DENXRATE) as DENXRATE,  
  0 as EXCHDATE,sum(ORDAVAMT) as ORDAVAMT,sum(DISCRTND) as DISCRTND, 
  sum(ORDISRTD) as ORDISRTD,sum(DISTKNAM) as DISTKNAM,sum(ORDISTKN) as ORDISTKN, 
  sum(DSCDLRAM) as DSCDLRAM,sum(ORDDLRAT) as ORDDLRAT,sum(DISAVTKN) as DISAVTKN, 
  sum(ORDATKN) as ORDATKN,min(EXGTBLID) as EXGTBLID,sum(COMMAMNT) as COMMAMNT, 
  sum(MRKDNAMT) as MRKDNAMT,sum(ORMRKDAM) as ORMRKDAM,min(COMAPPTO) as COMAPPTO,  
  sum(OCOMMAMT) as OCOMMAMT,sum(CMMSLAMT) as CMMSLAMT,sum(ORCOSAMT) as ORCOSAMT, 
  sum(NCOMAMNT) as NCOMAMNT,sum(ORNCMAMT) as ORNCMAMT,sum(TRDISAMT) as TRDISAMT, 
  sum(ORTDISAM) as ORTDISAM,sum(SUBTOTAL) as SUBTOTAL,sum(ORSUBTOT) as ORSUBTOT, 
  sum(REMSUBTO) as REMSUBTO,sum(OREMSUBT) as OREMSUBT,sum(EXTDCOST) as EXTDCOST, 
  sum(OREXTCST) as OREXTCST,sum(FRTAMNT) as FRTAMNT,sum(ORFRTAMT) as ORFRTAMT, 
  sum(MISCAMNT) as MISCAMNT,sum(ORMISCAMT) as ORMISCAMT,sum(FRTTXAMT) as FRTTXAMT, 
  sum(ORFRTTAX) as ORFRTTAX,sum(MSCTXAMT) as MSCTXAMT,sum(ORMSCTAX) as ORMSCTAX, 
  sum(BKTFRTAM) as BKTFRTAM,sum(ORBKTFRT) as ORBKTFRT,sum(BKTMSCAM) as BKTMSCAM, 
  sum(ORBKTMSC) as ORBKTMSC,sum(BCKTXAMT) as BCKTXAMT,sum(OBTAXAMT) as OBTAXAMT, 
  sum(TXBTXAMT) as TXBTXAMT,sum(OTAXTAMT) as OTAXTAMT,sum(TAXAMNT) as TAXAMNT, 
  sum(ORTAXAMT) as ORTAXAMT,sum(DOCAMNT) as DOCAMNT,sum(ORDOCAMT) as ORDOCAMT, 
  sum(PYMTRCVD) as PYMTRCVD,sum(ORPMTRVD) as ORPMTRVD,sum(DEPRECVD) as DEPRECVD, 
  sum(ORDEPRVD) as ORDEPRVD,sum(CODAMNT) as CODAMNT,sum(ORCODAMT) as ORCODAMT, 
  sum(ACCTAMNT) as ACCTAMNT,sum(ORACTAMT) as ORACTAMT,sum(NOTEINDX) as NOTEINDX, 
  sum(WITHHAMT) as WITHHAMT, 
  sum(BackoutTradeDisc) as BackoutTradeDisc,sum(OrigBackoutTradeDisc) as OrigBackoutTradeDisc 
  into ##sopBulkConfirmTemp from SOP10100 A inner join ' + @TableName + ' B on A.SOPNUMBE = B.SOPNUMBE and A.SOPTYPE = B.SOPTYPE where B.MKTOPROC = 1' 
  EXEC ( @ExecString ) 
 select @ExecString = 'update SOP10100 SET  
  DISCFRGT = A.DISCFRGT,ORDAVFRT = A.ORDAVFRT,ORDAVMSC = A.ORDAVMSC, 
  DISCMISC = A.DISCMISC,CURNCYID = A.CURNCYID,CURRNIDX = A.CURRNIDX, 
  RATETPID = A.RATETPID,XCHGRATE = A.XCHGRATE,DENXRATE = A.DENXRATE,EXCHDATE = A.EXCHDATE,EXGTBLID = A.EXGTBLID, 
  FUFILDAT = A.FUFILDAT,ACTLSHIP = A.ACTLSHIP,DISCDATE = A.DISCDATE, 
  PRCLEVEL = A.PRCLEVEL,LOCNCODE = A.LOCNCODE,PCKSLPNO = A.PCKSLPNO, 
  PICTICNU = A.PICTICNU,TXENGCLD = A.TXENGCLD,Flags = A.Flags,SOPSTATUS = A.SOPSTATUS, 
  DISAVAMT = A.DISAVAMT,ORDAVAMT = A.ORDAVAMT,DISCRTND = A.DISCRTND,ORDISRTD = A.ORDISRTD, 
  DISTKNAM = A.DISTKNAM,ORDISTKN = A.ORDISTKN,DSCDLRAM = A.DSCDLRAM,ORDDLRAT = A.ORDDLRAT, 
  DISAVTKN = A.DISAVTKN,ORDATKN = A.ORDATKN,MRKDNAMT = A.MRKDNAMT,ORMRKDAM = A.ORMRKDAM,COMAPPTO = A.COMAPPTO, 
  COMMAMNT = A.COMMAMNT,OCOMMAMT = A.OCOMMAMT,CMMSLAMT = A.CMMSLAMT,ORCOSAMT = A.ORCOSAMT, 
  NCOMAMNT = A.NCOMAMNT,ORNCMAMT = A.ORNCMAMT,TRDISAMT = A.TRDISAMT,ORTDISAM = A.ORTDISAM, 
  SUBTOTAL = A.SUBTOTAL,ORSUBTOT = A.ORSUBTOT,REMSUBTO = A.REMSUBTO,OREMSUBT = A.OREMSUBT, 
  EXTDCOST = A.EXTDCOST,OREXTCST = A.OREXTCST,FRTAMNT = A.FRTAMNT,ORFRTAMT = A.ORFRTAMT, 
  MISCAMNT = A.MISCAMNT,ORMISCAMT = A.ORMISCAMT,FRTTXAMT = A.FRTTXAMT,ORFRTTAX = A.ORFRTTAX, 
  MSCTXAMT = A.MSCTXAMT,ORMSCTAX = A.ORMSCTAX,BKTFRTAM = A.BKTFRTAM,ORBKTFRT = A.ORBKTFRT, 
  BKTMSCAM = A.BKTMSCAM,ORBKTMSC = A.ORBKTMSC,BCKTXAMT = A.BCKTXAMT,OBTAXAMT = A.OBTAXAMT, 
  TXBTXAMT = A.TXBTXAMT,OTAXTAMT = A.OTAXTAMT,TAXAMNT = A.TAXAMNT,ORTAXAMT = A.ORTAXAMT, 
  DOCAMNT = A.DOCAMNT,ORDOCAMT = A.ORDOCAMT,PYMTRCVD = A.PYMTRCVD,ORPMTRVD = A.ORPMTRVD, 
  DEPRECVD = A.DEPRECVD,ORDEPRVD = A.ORDEPRVD,CODAMNT = A.CODAMNT,ORCODAMT = A.ORCODAMT, 
  ACCTAMNT = A.ACCTAMNT,ORACTAMT = A.ORACTAMT,WITHHAMT = A.WITHHAMT,BackoutTradeDisc = A.BackoutTradeDisc, 
  OrigBackoutTradeDisc = A.OrigBackoutTradeDisc from ##sopBulkConfirmTemp A where SOP10100.SOPNUMBE = ''' + @SOPNUMBE + '''' 
  EXEC (@ExecString) 
 if exists(select * from tempdb..sysobjects where name = '##sopBulkConfirm' and type = 'U')   
 drop table ##sopBulkConfirm 
 select * into ##sopBulkConfirm from SOP10101 where 1 = 2 
 alter table ##sopBulkConfirm drop column DEX_ROW_ID 
 alter table ##sopBulkConfirm add DEX_ROW_ID int IDENTITY(16384,16384) 
 select @ExecString = 'insert into ##sopBulkConfirm 
  select 3 as SOPTYPE, ''' + @SOPNUMBE + ''' as SOPNUMBE, 16384 as SEQNUMBR, SLPRSNID, 
  SALSTERR, (sum(COMMAMNT) * 100.00 * 100.00) / sum(CMMSLAMT) as COMPRCNT, sum(COMMAMNT) as COMMAMNT, sum(OCOMMAMT) as OCOMMAMT, 
  sum(NCOMAMNT) as NCOMAMNT, sum(ORNCMAMT) as ORNCMAMT, (sum(CMMSLAMT)/sum(ACTSLAMT)) * 100.00 * 100.00 as PRCTOSAL,  
  sum(ACTSLAMT) as ACTSLAMT, sum(ORSLSAMT) as ORSLSAMT, sum(CMMSLAMT) as CMMSLAMT, 
  sum(ORCOSAMT) as ORCOSAMT, min(CURRNIDX) as CURRNIDX, '''' as TRXSORCE  
  from SOP10101 A inner join ' + @TableName + ' B on A.SOPNUMBE = B.SOPNUMBE and A.SOPTYPE = B.SOPTYPE where B.MKTOPROC = 1  
  group by SLPRSNID,SALSTERR' 
 EXEC( @ExecString ) 
 select @ExecString = 'insert into SOP10101  
 (SOPTYPE,SOPNUMBE,SEQNUMBR,SLPRSNID,SALSTERR,COMPRCNT,COMMAMNT,OCOMMAMT, 
 NCOMAMNT,ORNCMAMT,PRCTOSAL,ACTSLAMT,ORSLSAMT,CMMSLAMT,ORCOSAMT,CURRNIDX, 
 TRXSORCE) 
 select SOPTYPE,SOPNUMBE,DEX_ROW_ID as SEQNUMBR,SLPRSNID,SALSTERR,COMPRCNT, 
 COMMAMNT,OCOMMAMT,NCOMAMNT,ORNCMAMT,PRCTOSAL,ACTSLAMT,ORSLSAMT,CMMSLAMT, 
 ORCOSAMT,CURRNIDX,TRXSORCE from ##sopBulkConfirm' 
 EXEC( @ExecString ) 

	select @ExecString = 'update SOP10100 
				set PYMTRMID = (select top 1 PYMTRMID from ' + @TableName + ' A join SOP10100 B 
				on  A.SOPNUMBE = B.SOPNUMBE AND A.SOPTYPE = B.SOPTYPE 
				where MKTOPROC = 1 ) where SOPNUMBE = ''' + @SOPNUMBE + ''' and SOPTYPE = 3'
	EXEC( @ExecString )
END 

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[SD_Combine_Orders_To_Invoice] TO [DYNGRP] 
GO 

/*End_SD_Combine_Orders_To_Invoice*/
/*Begin_SD_Validate_Orders_To_Combine*/
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SD_Validate_Orders_To_Combine]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SD_Validate_Orders_To_Combine]
GO

 create   PROCEDURE [dbo].[SD_Validate_Orders_To_Combine] 
 ( 
 @TableName VARCHAR (50) , 
 @Result INTEGER OUTPUT   
 ) 
 AS 
 BEGIN 
 DECLARE @Count1 INTEGER 
 DECLARE @Count2 INTEGER 
 DECLARE @SQLString  NVARCHAR(500) 
 DECLARE @ParmDefinition NVARCHAR(500) 
 SELECT @SQLString = N'SELECT TOP 1 @nCount = COUNT (*) FROM ' + @TableName  + ' A INNER JOIN SOP10100 B ON  
 A.SOPNUMBE = B.SOPNUMBE AND A.SOPTYPE = B.SOPTYPE WHERE MKTOPROC = 1 
 GROUP BY A.CUSTNMBR, B.PRBTADCD, B.CURNCYID, B.PYMTRMID, B.EXGTBLID, B.XCHGRATE, B.RATETPID, B.COMAPPTO '  
 SET @ParmDefinition = N'@nCount INTEGER OUTPUT' 
 EXECUTE sp_executesql @SQLString, @ParmDefinition, 
                       @Count1 OUTPUT 
 SELECT @SQLString = N'SELECT @nCount = COUNT(*) FROM ' + @TableName  + ' WHERE MKTOPROC = 1'  
 SET @ParmDefinition = N'@nCount INTEGER OUTPUT' 
 EXECUTE sp_executesql @SQLString, @ParmDefinition, 
                       @Count2 OUTPUT 
 SELECT @Result = 0  
 IF @Count1 = @Count2  
 BEGIN 
  SELECT @Result = 1 
 END 
   SELECT @SQLString = N'SELECT @nCount = COUNT(*) FROM ' + @TableName  + ' A INNER JOIN SOP10100 B ON A.SOPTYPE = B.SOPTYPE AND  
 A.SOPNUMBE = B.SOPNUMBE AND A.MKTOPROC = 1 AND B.MSTRNUMB IN (SELECT MSTRNUMB FROM SD10301)' 
 SET @ParmDefinition = N'@nCount INTEGER OUTPUT'  
 EXECUTE sp_executesql @SQLString, @ParmDefinition,  
                        @Count1 OUTPUT  
 IF @Count1 > 0  
 BEGIN  
  SELECT @Result = 0  
 END  
 END 

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[SD_Validate_Orders_To_Combine] TO [DYNGRP] 
GO 

/*End_SD_Validate_Orders_To_Combine*/
/*Begin_SD_YearendClose_Check*/
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SD_YearendClose_Check]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SD_YearendClose_Check]
GO



CREATE Proc SD_YearendClose_Check 
@FirstDate DATETIME,
@SecondDate DATETIME,
@PreTransCount NUMERIC (19,5) = 0 output 
as 
begin
DECLARE 
@NegativeAdj NUMERIC (19, 5), 
	@PositiveAdj NUMERIC (19, 5), 
	@ShpNotInv NUMERIC (19, 5)	
 if exists(Select MSTRNUMB From SOP10100 Where MSTRNUMB in  ( Select MSTRNUMB From SD10301)  and GLPOSTDT Between @FirstDate and @SecondDate)
 begin
	set @PreTransCount = 1
	return 0
 end
 select @NegativeAdj = ISNULL(SUM(QUANTITY),0) from SD10200 where SDADJTYPE = 0 
 select @PositiveAdj = ISNULL(SUM(QUANTITY),0) from SD10200 where SDADJTYPE <> 0 
 select @ShpNotInv = @NegativeAdj - @PositiveAdj 
 select @PreTransCount = @ShpNotInv 
return 0

end


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[SD_YearendClose_Check ] TO [DYNGRP] 
GO 

/*End_SD_YearendClose_Check */
/*Begin_SD_Get_SVCTransfer_Table_Status*/
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SD_Get_SVCTransfer_Table_Status]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SD_Get_SVCTransfer_Table_Status]
GO

Create Procedure [dbo].[SD_Get_SVCTransfer_Table_Status]
(@TransferNumber char(15),
 @TableType smallint output,
 @Status smallint output)
As
 
if (exists(select * from SVC00700 where ORDDOCID = @TransferNumber)) 
 begin
 select @TableType = 1
 select @Status = STATUS from SVC00700 where ORDDOCID = @TransferNumber
 end
else if (exists(select * from SVC30700 where ORDDOCID = @TransferNumber))
 begin
 select @TableType = 2
 select @Status = STATUS from SVC30700 where ORDDOCID = @TransferNumber
 end
else
 begin
 select @TableType = 0
 set @Status = 0
 end
return 

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[SD_Get_SVCTransfer_Table_Status] TO [DYNGRP] 
GO 

/*End_SD_Get_SVCTransfer_Table_Status*/
/*Begin_SD_SVCTransfer_TransferToHistory*/
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SD_SVCTransfer_TransferToHistory]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SD_SVCTransfer_TransferToHistory]
GO

Create Procedure [dbo].[SD_SVCTransfer_TransferToHistory]
(@TransferNumber char(15))
As
declare @Line int
declare @SerialLine int
declare @Seq int
declare @DistType smallint
declare @MoveDist tinyint

if exists(select * from SVC00700 where ORDDOCID = @TransferNumber and STATUS between 3 and 5) 
BEGIN
 if exists(select * from SVC00998) 
 select @MoveDist = SVC_DistHistory_Transfer from SVC00998 
 else
 select @MoveDist = DISTHIST from POP40100 

 INSERT INTO SVC30700 with (rowlock) 
 select
 ORDDOCID,RFRNCDOC,TECHID, OFFID, STATUS, ORDRDATE, ETADTE,
 CUSTNAME,ADDRESS1,ADDRESS2, CITY,STATE ,ZIPCODE, SHIPMTHD,
 TRNSFLOC,ITLOCN,LOCNCODE, NOTEINDX, SVC_Address_Option ,
 SVC_Misc_Address_Code, ADDRESS3, COUNTRY,USERID
 from SVC00700
 where ORDDOCID = @TransferNumber

declare cursor_701transfer cursor for select LNITMSEQ from SVC00701 where ORDDOCID = @TransferNumber 
open cursor_701transfer
 FETCH NEXT FROM cursor_701transfer INTO @Line
 while @@FETCH_STATUS = 0
 BEGIN
 INSERT INTO SVC30701 with (rowlock) 
 select
 ORDDOCID,LNITMSEQ,STATUS, ITEMNMBR,DSCRIPTN,UOFM,TRNSFQTY, QTYFULFI, QTYSHPPD,
 QTY_To_Receive, QTYRECVD, CALLNBR, SRVRECTYPE, SERVLITEMSEQ,EQPLINE,LINITMTYP,
 RETDOCID,LNSEQNBR, RTV_Number,WORECTYPE, WORKORDNUM,
 QTYBSUOM, TRNSFLOC, ITLOCN, TRNSTLOC,
 TRFQTYTY, TRTQTYTY, DECPLCUR, DECPLQTY, Landed_Cost_Group_ID
 from SVC00701 where ORDDOCID = @TransferNumber and LNITMSEQ = @Line
 FETCH NEXT FROM cursor_701transfer INTO @Line
 END
deallocate cursor_701transfer

declare cursor_702transfer cursor for select TRANSLINESEQ,SLTSQNUM from SVC00702 where ORDDOCID = @TransferNumber 
open cursor_702transfer
 FETCH NEXT FROM cursor_702transfer INTO @Line,@SerialLine
 while @@FETCH_STATUS = 0
 BEGIN
 INSERT INTO SVC30702 with (rowlock) 
 select
 ORDDOCID, TRANSLINESEQ, SRVRECTYPE, CALLNBR,EQPLINE,LINITMTYP, LNITMSEQ,
 QTYTYPE, SERLTNUM, SERLTQTY,SLTSQNUM,DATERECD,DTSEQNUM, UNITCOST,ITEMNMBR,
 TRXSORCE,POSTED, OVRSERLT, STATUS, FROMBIN, TOBIN, MFGDATE, EXPNDATE
 from SVC00702 where ORDDOCID = @TransferNumber and TRANSLINESEQ = @Line and SLTSQNUM =@SerialLine
 FETCH NEXT FROM cursor_702transfer INTO @Line,@SerialLine
 END
deallocate cursor_702transfer

if @MoveDist  = 1 
begin
 declare cursor_731transfer cursor for select LNITMSEQ,SEQNUMBR,SVC_Distribution_Type
 from SVC00731 where ORDDOCID = @TransferNumber  
 open cursor_731transfer
 FETCH NEXT FROM cursor_731transfer INTO @Line,@Seq,@DistType
 while @@FETCH_STATUS = 0
 BEGIN
 INSERT INTO SVC30731 with (rowlock) 
 select
 ORDDOCID,LNITMSEQ,SEQNUMBR, SVC_Distribution_Type, DistRef,ACTINDX,
 DEBITAMT,ORDBTAMT,CRDTAMNT,ORCRDAMT,CURRNIDX, TRXSORCE, POSTED, POSTEDDT
 from SVC00731 where ORDDOCID = @TransferNumber and LNITMSEQ = @Line
 and SEQNUMBR = @Seq and SVC_Distribution_Type=@DistType
 FETCH NEXT FROM cursor_731transfer INTO @Line,@Seq,@DistType
 END
 deallocate cursor_731transfer
end

update SVC30700 with (rowlock) set STATUS = 7 where ORDDOCID = @TransferNumber
update SVC30701 with (rowlock) set STATUS = 7 where ORDDOCID = @TransferNumber
update SVC30702 with (rowlock) set STATUS = 7 where ORDDOCID = @TransferNumber

delete from SVC00700 where ORDDOCID = @TransferNumber
delete from SVC00701 where ORDDOCID = @TransferNumber
delete from SVC00702 where ORDDOCID = @TransferNumber
delete from SVC00731 where ORDDOCID = @TransferNumber

END

return 

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[SD_SVCTransfer_TransferToHistory] TO [DYNGRP] 
GO 

/*End_SD_SVCTransfer_TransferToHistory*/

/*Begin_sdIVInTransTransferInq*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdIVInTransTransferInq]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdIVInTransTransferInq]
GO

create  procedure sdIVInTransTransferInq  
 @TBName varchar(25),
@DocType smallint,
@DocNum		varchar(25),
 @O_SQL_Error_State int = NULL  output
as

begin

exec('truncate table '+@TBName+'')
if @DocType=1 
exec ('insert into '+@TBName +'(IVDOCNBR,IVDOCTYP,ITEMNMBR,ITEMDESC,LNSEQNBR,UOFM,TRXQTY,TRXLOCTN,VIALOCN,TRNSTLOC,DECPLCUR,DECPLQTY) 
select distinct ORDDOCID,4,ITEMNMBR,DSCRIPTN,LNITMSEQ,UOFM,TRNSFQTY,TRNSFLOC,ITLOCN,TRNSTLOC,DECPLCUR,DECPLQTY from SVC00701 where ORDDOCID='''+@DocNum+'''')
else

exec ('insert into '+@TBName +'(IVDOCNBR,IVDOCTYP,ITEMNMBR,ITEMDESC,LNSEQNBR,UOFM,TRXQTY,TRXLOCTN,VIALOCN,TRNSTLOC,DECPLCUR,DECPLQTY) 
select distinct ORDDOCID,4,ITEMNMBR,DSCRIPTN,LNITMSEQ,UOFM,TRNSFQTY,TRNSFLOC,ITLOCN,TRNSTLOC,DECPLCUR,DECPLQTY from SVC30701 where ORDDOCID='''+@DocNum+'''')		

end

go
set quoted_identifier on 
go
set ansi_nulls on 
go

grant execute on [dbo].[sdIVInTransTransferInq] to [DYNGRP] 
go 

/*End_sdIVInTransTransferInq*/
/*Begin_sdIVInTransTransferSerial*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdIVInTransTransferSerial]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdIVInTransTransferSerial]
GO

create  procedure sdIVInTransTransferSerial  
@TBName varchar(25),
@DocType smallint,
@DocNum	varchar(25),
@TRNSSEQ  int ,
@O_SQL_Error_State int = NULL  output
as

begin

exec('truncate table '+@TBName+'')
if @DocType=1 
exec ('insert into '+@TBName +'(ORDDOCID,LNITMSEQ,QTYTYPE,SERLTNUM,SERLTQTY,SLTSQNUM,ITEMNMBR,FROMBIN,TOBIN) 
select distinct ORDDOCID,TRANSLINESEQ,QTYTYPE,SERLTNUM,SERLTQTY,SLTSQNUM,ITEMNMBR,FROMBIN,TOBIN from SVC00702 where ORDDOCID='''+@DocNum+''' and  TRANSLINESEQ='''+@TRNSSEQ+'''')
else

exec ('insert into '+@TBName +'(ORDDOCID,LNITMSEQ,QTYTYPE,SERLTNUM,SERLTQTY,SLTSQNUM,ITEMNMBR,FROMBIN,TOBIN) 
select distinct ORDDOCID,TRANSLINESEQ,QTYTYPE,SERLTNUM,SERLTQTY,SLTSQNUM,ITEMNMBR,FROMBIN,TOBIN from SVC30702 where ORDDOCID='''+@DocNum+''' and  TRANSLINESEQ='''+@TRNSSEQ+'''')

end

go
set quoted_identifier on 
go
set ansi_nulls on 
go

grant execute on [dbo].[sdIVInTransTransferSerial] to [DYNGRP] 
go 

/*End_sdIVInTransTransferSerial*/

/*Begin_sdIVTransInq*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdIVTransInq]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdIVTransInq]
GO

create  procedure sdIVTransInq  
@TBName varchar(25),
@NumTables	smallint,
@DocType smallint,
@O_SQL_Error_State int = NULL  output
as

begin

exec('truncate table '+@TBName+'')
if @DocType=1 
begin
if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7

exec ('insert into '+@TBName +'(IVDOCTYP,DOCNUMBR) 
select distinct SD10204.IVDOCTYP,SD10204.IVDOCNBR
from SD10204 inner join IV10000 on  SD10204.IVDOCTYP=3 and SD10204.IVDOCTYP=IV10000.IVDOCTYP and SD10204.IVDOCNBR=IV10000.IVDOCNBR')

if @NumTables=2 or 	@NumTables=4 or @NumTables=6 or @NumTables=7

exec ('insert into '+@TBName +'(IVDOCTYP,DOCNUMBR) 
select distinct IVDOCTYP,DOCNUMBR
from IV30200  where  IVDOCTYP=3 and DOCNUMBR in(select IVDOCNBR from SD10201 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) and TRXSORCE not like ''SDSTV%'' and  DOCNUMBR not in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3)')

if @NumTables=3 or 	@NumTables=5  or @NumTables=6 or @NumTables=7

exec ('insert into '+@TBName +'(IVDOCTYP,DOCNUMBR) 
select distinct IVDOCTYP,DOCNUMBR
from IV30200  where  IVDOCTYP=3 and TRXSORCE like ''SDSTV%'' or DOCNUMBR in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) ')
end
else if @DocType=2
begin
if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7

exec ('insert into '+@TBName +'(IVDOCTYP,DOCNUMBR) 
select distinct 4,ORDDOCID
from SVC00700 where ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC00700.ORDDOCID ) ')
if @NumTables=2 or 	@NumTables=4 or @NumTables=6 or @NumTables=7

exec ('insert into '+@TBName +'(IVDOCTYP,DOCNUMBR) 
select distinct 4,ORDDOCID
from SVC30700   where STATUS<>7 and ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)  ')

if @NumTables=3 or 	@NumTables=5  or @NumTables=6 or @NumTables=7

exec ('insert into '+@TBName +'(IVDOCTYP,DOCNUMBR) 
select distinct 4,ORDDOCID
from SVC30700 where STATUS=7 and  ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID) ')

end
end
go
set quoted_identifier on 
go
set ansi_nulls on 
go

grant execute on [dbo].[sdIVTransInq] to [DYNGRP] 
go 

/*End_sdIVTransInq*/
/*Begin_sdIVTransInqBrowseBackward*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdIVTransInqBrowseBackward]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdIVTransInqBrowseBackward]
GO

create  procedure sdIVTransInqBrowseBackward  
@DocNum varchar(25),
@NumTables	smallint,
@DocType smallint,
@DocNum1 varchar(25) output,
@O_SQL_Error_State int = NULL  output
as

declare @DocNum2 varchar(25),@DocNum3 varchar(25),@DocNum4 varchar(25)
begin

if @DocType=1 
begin
if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7
set @DocNum2=(select top 1 SD10204.IVDOCNBR from SD10204 inner join IV10000 on  SD10204.IVDOCTYP=IV10000.IVDOCTYP and SD10204.IVDOCNBR=IV10000.IVDOCNBR where SD10204.IVDOCNBR<@DocNum and SD10204.IVDOCTYP=3 order by SD10204.IVDOCNBR desc)

if @NumTables=2 or 	@NumTables=4 
set @DocNum3=(select top 1 DOCNUMBR from IV30200 where DOCNUMBR<@DocNum and IVDOCTYP=3 and DOCNUMBR in(select IVDOCNBR from SD10201 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) and TRXSORCE not like 'SDSTV%' and DOCNUMBR not in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) order by DOCNUMBR desc)

if @NumTables=3 or 	@NumTables=5  
set @DocNum3=(select top 1 DOCNUMBR from IV30200 where DOCNUMBR<@DocNum and IVDOCTYP=3 and ( TRXSORCE like 'SDSTV%' or DOCNUMBR in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3)) order by DOCNUMBR desc)

if @NumTables=6 or 	@NumTables=7  
set @DocNum3=(select top 1 DOCNUMBR from IV30200 where DOCNUMBR<@DocNum and IVDOCTYP=3 and (DOCNUMBR in(select IVDOCNBR from SD10201 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) or TRXSORCE like 'SDSTV%' or DOCNUMBR in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3)) order by DOCNUMBR desc)
end

else 
begin
if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7
set @DocNum2=(select top 1 ORDDOCID from SVC00700 where ORDDOCID<@DocNum and ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC00700.ORDDOCID ) order by ORDDOCID desc)

if @NumTables=2 or 	@NumTables=4 
set @DocNum3=(select top 1 ORDDOCID from SVC30700 where ORDDOCID<@DocNum and STATUS<>7 and ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID) order by ORDDOCID desc)


if @NumTables=3 or 	@NumTables=5  
set @DocNum3=(select top 1 ORDDOCID from SVC30700 where ORDDOCID<@DocNum and STATUS=7 and  ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)order by ORDDOCID desc)

if @NumTables=6 or 	@NumTables=7  
set @DocNum3=(select top 1 ORDDOCID from SVC30700 where ORDDOCID<@DocNum and ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)order by ORDDOCID desc)
end

if @NumTables=1 
set @DocNum1=@DocNum2
else if @NumTables=2 		
set @DocNum1=@DocNum3
else if @NumTables=3 		
set @DocNum1=@DocNum3
else if @NumTables=4
begin
if @DocNum2=NULL
set @DocNum1=@DocNum3
else if @DocNum3=NULL
set @DocNum1=@DocNum2
else	
if @DocNum2>@DocNum3	
set @DocNum1=@DocNum2
else
set @DocNum1=@DocNum3
end
else if @NumTables=5 
begin
if @DocNum2=NULL
set @DocNum1=@DocNum3
else if @DocNum3=NULL
set @DocNum1=@DocNum2
else	
if @DocNum2>@DocNum3	
set @DocNum1=@DocNum2
else
set @DocNum1=@DocNum3
end
else if @NumTables=6 
set @DocNum1=@DocNum3
else if @NumTables=7 
begin
if @DocNum2=NULL
set @DocNum1=@DocNum3
else if @DocNum3=NULL
set @DocNum1=@DocNum2
else	
if @DocNum2>@DocNum3	
set @DocNum1=@DocNum2
else
set @DocNum1=@DocNum3
end

end

go
set quoted_identifier on 
go
set ansi_nulls on 
go

grant execute on [dbo].[sdIVTransInqBrowseBackward] to [DYNGRP] 
go 

/*End_sdIVTransInqBrowseBackward*/
/*Begin_sdIVTransInqBrowseFirst*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdIVTransInqBrowseFirst]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdIVTransInqBrowseFirst]
go

create  procedure sdIVTransInqBrowseFirst 
@DocNum varchar(25),
@NumTables	smallint,
@DocType   smallint,
@DocNum1 varchar(25) output,
@O_SQL_Error_State int = NULL  output
as

declare @DocNum2 varchar(25),@DocNum3 varchar(25),@DocNum4 varchar(25)
begin

if @DocType=1 
begin
if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7
set @DocNum2=(select min(SD10204.IVDOCNBR) from SD10204 inner join IV10000 on  SD10204.IVDOCTYP=3 and SD10204.IVDOCTYP=IV10000.IVDOCTYP and SD10204.IVDOCNBR=IV10000.IVDOCNBR  )

if @NumTables=2 or 	@NumTables=4 
set @DocNum3=(select min(DOCNUMBR) from IV30200 where  IVDOCTYP=3 and DOCNUMBR in(select IVDOCNBR from SD10201 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) and TRXSORCE not like 'SDSTV%' and DOCNUMBR not in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3))

if @NumTables=3 or 	@NumTables=5  
set @DocNum3=(select min(DOCNUMBR) from IV30200 where  IVDOCTYP=3 and ( TRXSORCE like 'SDSTV%' or DOCNUMBR in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3)) )

if @NumTables=6 or 	@NumTables=7  
set @DocNum3=(select min(DOCNUMBR) from IV30200 where  IVDOCTYP=3 and (DOCNUMBR in(select IVDOCNBR from SD10201 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) or TRXSORCE like 'SDSTV%' or DOCNUMBR in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3)) )
end

else   
begin
if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7
set @DocNum2=(select min(ORDDOCID) from SVC00700  where ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC00700.ORDDOCID ))

if @NumTables=2 or 	@NumTables=4 
set @DocNum3=(select min(ORDDOCID) from SVC30700  where STATUS<>7 and ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)) 

if @NumTables=3 or 	@NumTables=5  
set @DocNum3= (select min(ORDDOCID) from SVC30700 where STATUS=7 and  ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)) 

if @NumTables=6 or 	@NumTables=7  
set @DocNum3=(select min(ORDDOCID) from SVC30700 where ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)) 

end

if @NumTables=1 
SET @DocNum1=@DocNum2
else if @NumTables=2 		
SET @DocNum1=@DocNum3
else if @NumTables=3 		
SET @DocNum1=@DocNum3
else if @NumTables=4
BEGIN
if @DocNum2=NULL
SET @DocNum1=@DocNum3
else if @DocNum3=NULL
SET @DocNum1=@DocNum2
else	
if @DocNum2<@DocNum3	
SET @DocNum1=@DocNum2
else
SET @DocNum1=@DocNum3
END
else if @NumTables=5 
BEGIN
if @DocNum2=NULL
SET @DocNum1=@DocNum3
else if @DocNum3=NULL
SET @DocNum1=@DocNum2
else	
if @DocNum2<@DocNum3	
SET @DocNum1=@DocNum2
else
SET @DocNum1=@DocNum3
END
else if @NumTables=6 
SET @DocNum1=@DocNum3
else if @NumTables=7 
BEGIN
if @DocNum2=NULL
SET @DocNum1=@DocNum3
else if @DocNum3=NULL
SET @DocNum1=@DocNum2
else	
if @DocNum2<@DocNum3	
SET @DocNum1=@DocNum2
else
SET @DocNum1=@DocNum3
END

END

GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[sdIVTransInqBrowseFirst] TO [DYNGRP] 
GO 

/*End_sdIVTransInqBrowseFirst*/
/*Begin_sdIVTransInqBrowseForward*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdIVTransInqBrowseForward]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdIVTransInqBrowseForward]
GO

create  procedure sdIVTransInqBrowseForward  
@DocNum varchar(25),
@NumTables	smallint,
@DocType smallint,
@DocNum1 varchar(25) output,
@O_SQL_Error_State int = NULL  output
as


declare @DocNum2 varchar(25),@DocNum3 varchar(25),@DocNum4 varchar(25)
begin

if @DocType=1
begin

if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7
set @DocNum2=(select top 1 SD10204.IVDOCNBR from SD10204 inner join IV10000 on  SD10204.IVDOCTYP=IV10000.IVDOCTYP and SD10204.IVDOCNBR=IV10000.IVDOCNBR where SD10204.IVDOCNBR>@DocNum and SD10204.IVDOCTYP=3 order by SD10204.IVDOCNBR)

if @NumTables=2 or 	@NumTables=4 
set @DocNum3=(select top 1 DOCNUMBR from IV30200 where DOCNUMBR>@DocNum and IVDOCTYP=3 and DOCNUMBR in(select IVDOCNBR from SD10201 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) and TRXSORCE not like 'SDSTV%' and DOCNUMBR not in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) order by DOCNUMBR)

if @NumTables=3 or 	@NumTables=5  
set @DocNum3=(select top 1 DOCNUMBR from IV30200 where DOCNUMBR>@DocNum and IVDOCTYP=3 and ( TRXSORCE like 'SDSTV%' or DOCNUMBR in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3)) order by DOCNUMBR)

if @NumTables=6 or 	@NumTables=7  
set @DocNum3=(select top 1 DOCNUMBR from IV30200 where DOCNUMBR>@DocNum and IVDOCTYP=3 and (DOCNUMBR in(select IVDOCNBR from SD10201 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) or TRXSORCE like 'SDSTV%' or DOCNUMBR in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3)) order by DOCNUMBR)

end
else
begin
if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7
set @DocNum2=(select top 1 ORDDOCID from SVC00700 where ORDDOCID>@DocNum and ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC00700.ORDDOCID ) order by  ORDDOCID)

if @NumTables=2 or 	@NumTables=4 
set @DocNum3=(select top 1 ORDDOCID from SVC30700 where ORDDOCID>@DocNum and  STATUS<>7 and ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)order by  ORDDOCID)

if @NumTables=3 or 	@NumTables=5  
set @DocNum3=(select top 1 ORDDOCID from SVC30700 where ORDDOCID>@DocNum and STATUS=7 and  ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID) order by  ORDDOCID)

if @NumTables=6 or 	@NumTables=7  
set @DocNum3=(select top 1 ORDDOCID from SVC30700 where ORDDOCID>@DocNum and ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)order by  ORDDOCID)
end


if @NumTables=1 
set @DocNum1=@DocNum2
else if @NumTables=2 		
set @DocNum1=@DocNum3
else if @NumTables=3 		
set @DocNum1=@DocNum3
else if @NumTables=4
begin
if @DocNum2=NULL
set @DocNum1=@DocNum3
else if @DocNum3=NULL
set @DocNum1=@DocNum2
else	
if @DocNum2<@DocNum3	
set @DocNum1=@DocNum2
else
set @DocNum1=@DocNum3
end
else if @NumTables=5 
begin
if @DocNum2=NULL
set @DocNum1=@DocNum3
else if @DocNum3=NULL
set @DocNum1=@DocNum2
else	
if @DocNum2<@DocNum3	
set @DocNum1=@DocNum2
else
set @DocNum1=@DocNum3
end
else if @NumTables=6 
set @DocNum1=@DocNum3
else if @NumTables=7 
begin
if @DocNum2=NULL
set @DocNum1=@DocNum3
else if @DocNum3=NULL
set @DocNum1=@DocNum2
else	
if @DocNum2<@DocNum3	
set @DocNum1=@DocNum2
else
set @DocNum1=@DocNum3
end

end

go
set quoted_identifier on 
go
set ansi_nulls on 
go

grant execute on [dbo].[sdIVTransInqBrowseForward] to [DYNGRP] 
go 

/*End_sdIVTransInqBrowseForward*/
/*Begin_sdIVTransInqBrowseLast*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdIVTransInqBrowseLast]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdIVTransInqBrowseLast]
GO

create  procedure sdIVTransInqBrowseLast 
@DocNum varchar(25),
@NumTables	smallint,
@DocType   smallint,
@DocNum1 varchar(25) output,
@O_SQL_Error_State int = NULL  output
as

declare @DocNum2 varchar(25),@DocNum3 varchar(25),@DocNum4 varchar(25)
begin

if @DocType=1
Begin

if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7
set @DocNum2=(select max(SD10204.IVDOCNBR) from SD10204 inner join IV10000 on SD10204.IVDOCTYP=3 and SD10204.IVDOCTYP=IV10000.IVDOCTYP and SD10204.IVDOCNBR=IV10000.IVDOCNBR )

if @NumTables=2 or 	@NumTables=4 
set @DocNum3=(select max(DOCNUMBR) from IV30200 where  IVDOCTYP=3 and DOCNUMBR in(select IVDOCNBR from SD10201 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) and TRXSORCE not like 'SDSTV%' and DOCNUMBR not in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) )

if @NumTables=3 or 	@NumTables=5  
set @DocNum3=(select max(DOCNUMBR) from IV30200 where  IVDOCTYP=3 and (TRXSORCE like 'SDSTV%' or DOCNUMBR in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3)))

if @NumTables=6 or 	@NumTables=7  
set @DocNum3=(select max(DOCNUMBR) from IV30200 where  IVDOCTYP=3 and (DOCNUMBR in(select IVDOCNBR from SD10201 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3) or TRXSORCE like 'SDSTV%' or DOCNUMBR in(select IVDOCNBR from SD30100 where IVDOCNBR=IV30200.DOCNUMBR and IVDOCTYP=3)))

end
else
begin
if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7
set @DocNum2=(select max(ORDDOCID) from SVC00700 where ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC00700.ORDDOCID ))

if @NumTables=2 or 	@NumTables=4 
set @DocNum3=(select max(ORDDOCID) from SVC30700  where STATUS<>7 and ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID) )

if @NumTables=3 or 	@NumTables=5  
set @DocNum3=(select max(ORDDOCID) from SVC30700 where STATUS=7 and ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)) 

if @NumTables=6 or 	@NumTables=7  
set @DocNum3=(select max(ORDDOCID) from SVC30700 where  ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)) 

end

if @NumTables=1 
set @DocNum1=@DocNum2
else if @NumTables=2 		
set @DocNum1=@DocNum3
else if @NumTables=3 		
set @DocNum1=@DocNum3
else if @NumTables=4
begin
if @DocNum2=NULL
set @DocNum1=@DocNum3
else if @DocNum3=NULL
set @DocNum1=@DocNum2
else	
if @DocNum2>@DocNum3	
set @DocNum1=@DocNum2
else
set @DocNum1=@DocNum3
end
else if @NumTables=5 
begin
if @DocNum2=NULL
set @DocNum1=@DocNum3
else if @DocNum3=NULL
set @DocNum1=@DocNum2
else	
if @DocNum2>@DocNum3	
set @DocNum1=@DocNum2
else
set @DocNum1=@DocNum3
end
else if @NumTables=6 
set @DocNum1=@DocNum3
else if @NumTables=7 
begin
if @DocNum2=NULL
set @DocNum1=@DocNum3
else if @DocNum3=NULL
set @DocNum1=@DocNum2
else	
if @DocNum2>@DocNum3	
set @DocNum1=@DocNum2
else
set @DocNum1=@DocNum3
end

end

go
set quoted_identifier on 
go
set ansi_nulls on 
go

grant execute on [dbo].[sdIVTransInqBrowseLast] to [DYNGRP] 
go 

/*End_sdIVTransInqBrowseLast*/
/*Begin_SD_Calculate_Invoiced_Not_Shipped*/
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SD_Calculate_Invoiced_Not_Shipped]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SD_Calculate_Invoiced_Not_Shipped]
GO

CREATE PROCEDURE [dbo].[SD_Calculate_Invoiced_Not_Shipped]   
(   
@ITEMNMBR VARCHAR (31) ,   
@LOCNCODE VARCHAR (11) ,   
@InvdNotShpd NUMERIC (19, 5) output   
)   
AS   
BEGIN  
 DECLARE @QTY_PREINVORD_BUOM NUMERIC (19, 5), @QTY_PREINVFORD_BUOM NUMERIC (19, 5)
  
 SELECT @QTY_PREINVORD_BUOM = ISNULL(SUM(SOP_LINE_WORK.ATYALLOC * IV_UofM_SETP_DTL.QTYBSUOM),0) FROM   
 SOP10100 SOP_HDR_WORK  
 INNER JOIN   
 (  
  SELECT PREINV.SOPNUMBE, PREINV.MSTRNUMB FROM  
  (  
  SELECT PREINV_HIST.SOPNUMBE, SOP_HDR_WORK.MSTRNUMB FROM   
  SD10301 PREINV_HIST  
  INNER JOIN SOP10100 SOP_HDR_WORK ON	PREINV_HIST.MSTRNUMB = SOP_HDR_WORK.MSTRNUMB AND   
										SOP_HDR_WORK.SOPNUMBE <> PREINV_HIST.SOPNUMBE AND  
										SOP_HDR_WORK.PSTGSTUS = 0  
  GROUP BY PREINV_HIST.SOPNUMBE, SOP_HDR_WORK.MSTRNUMB  
  ) PREINV  
 ) PREINV_MSTRNUM ON (  
					   SOP_HDR_WORK.MSTRNUMB = PREINV_MSTRNUM.MSTRNUMB AND   
					   SOP_HDR_WORK.SOPTYPE = 2 AND       
					   SOP_HDR_WORK.PSTGSTUS = 0       
					  )  
 INNER JOIN SOP10200 SOP_LINE_WORK ON (   
									   SOP_HDR_WORK.SOPNUMBE = SOP_LINE_WORK.SOPNUMBE AND
									   SOP_LINE_WORK.ITEMNMBR = @ITEMNMBR AND
									   SOP_LINE_WORK.LOCNCODE = @LOCNCODE
									   )  
 INNER JOIN IV00101 IV_Item_MSTR ON IV_Item_MSTR.ITEMNMBR = SOP_LINE_WORK.ITEMNMBR  
 INNER JOIN IV40202 IV_UofM_SETP_DTL ON IV_Item_MSTR.UOMSCHDL = IV_UofM_SETP_DTL.UOMSCHDL  
 WHERE IV_UofM_SETP_DTL.QTYBSUOM <> 0 AND IV_UofM_SETP_DTL.UOFM = SOP_LINE_WORK.UOFM   




SELECT @QTY_PREINVFORD_BUOM = ISNULL(SUM(SOP_LINE_WORK.ATYALLOC * IV_UofM_SETP_DTL.QTYBSUOM),0) FROM   
 SOP10100 SOP_HDR_WORK  
 INNER JOIN   
 (  
  SELECT PREINV.SOPNUMBE, PREINV.MSTRNUMB FROM  
  (  
  SELECT PREINV_HIST.SOPNUMBE, SOP_HDR_WORK.MSTRNUMB FROM   
  SD10301 PREINV_HIST  
  INNER JOIN SOP10100 SOP_HDR_WORK ON	PREINV_HIST.MSTRNUMB = SOP_HDR_WORK.MSTRNUMB AND   
										SOP_HDR_WORK.SOPNUMBE <> PREINV_HIST.SOPNUMBE AND  
										SOP_HDR_WORK.PSTGSTUS = 0  
  GROUP BY PREINV_HIST.SOPNUMBE, SOP_HDR_WORK.MSTRNUMB  
  ) PREINV  
 ) PREINV_MSTRNUM ON (  
					   SOP_HDR_WORK.MSTRNUMB = PREINV_MSTRNUM.MSTRNUMB AND   
					   (SOP_HDR_WORK.SOPTYPE = 6 OR SOP_HDR_WORK.SOPTYPE = 3) AND       
					   SOP_HDR_WORK.PSTGSTUS = 0       
					  )  
 INNER JOIN SOP10200 SOP_LINE_WORK ON (   
									   SOP_HDR_WORK.SOPNUMBE = SOP_LINE_WORK.SOPNUMBE AND
									   SOP_LINE_WORK.ITEMNMBR = @ITEMNMBR AND
									   SOP_LINE_WORK.LOCNCODE = @LOCNCODE
									   )  
 INNER JOIN IV00101 IV_Item_MSTR ON IV_Item_MSTR.ITEMNMBR = SOP_LINE_WORK.ITEMNMBR  
 INNER JOIN IV40202 IV_UofM_SETP_DTL ON IV_Item_MSTR.UOMSCHDL = IV_UofM_SETP_DTL.UOMSCHDL  
 WHERE	IV_UofM_SETP_DTL.QTYBSUOM <> 0 AND 
		IV_UofM_SETP_DTL.UOFM = SOP_LINE_WORK.UOFM AND
		SOP_HDR_WORK.SOPNUMBE NOT IN(SELECT SOPNUMBE FROM SD10200 WHERE SDADJTYPE = 0)
  
 SELECT @InvdNotShpd = (@QTY_PREINVORD_BUOM + @QTY_PREINVFORD_BUOM)  
END

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[SD_Calculate_Invoiced_Not_Shipped] TO [DYNGRP]
GO 

/*End_SD_Calculate_Invoiced_Not_Shipped*/
/*Begin_SD_Calculate_Shipped_Not_Transfered*/
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS OFF 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SD_Calculate_Shipped_Not_Transfered]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SD_Calculate_Shipped_Not_Transfered]
GO

CREATE  PROCEDURE [dbo].[SD_Calculate_Shipped_Not_Transfered]   
(   
@ITEMNMBR VARCHAR (31) ,   
@LOCNCODE VARCHAR (11) ,   
@ShpdNotTrsfd NUMERIC (19, 5) output   
)   
AS
BEGIN
DECLARE @PosAdj NUMERIC (19, 5), @NegAdj NUMERIC (19, 5)

 SELECT @NegAdj = ISNULL(SUM(IV_TRX_WORK_LINE.TRXQTY * IV_UofM_SETP_DTL.QTYBSUOM),0) FROM   
 SD10201 SD_Inv_Adj  
 INNER JOIN IV10001 IV_TRX_WORK_LINE ON (  
           IV_TRX_WORK_LINE.IVDOCNBR = SD_Inv_Adj.IVDOCNBR AND  
           IV_TRX_WORK_LINE.IVDOCTYP = SD_Inv_Adj.IVDOCTYP AND  
           IV_TRX_WORK_LINE.LNSEQNBR = SD_Inv_Adj.SEQNUMBR  
             )  
 INNER JOIN IV00101 IV_Item_MSTR ON IV_Item_MSTR.ITEMNMBR = IV_TRX_WORK_LINE.ITEMNMBR  
 INNER JOIN IV40202 IV_UofM_SETP_DTL ON IV_Item_MSTR.UOMSCHDL = IV_UofM_SETP_DTL.UOMSCHDL  
 WHERE IV_UofM_SETP_DTL.QTYBSUOM <> 0 AND   
   IV_UofM_SETP_DTL.UOFM = IV_TRX_WORK_LINE.UOFM AND  
   SD_Inv_Adj.ITEMNMBR = @ITEMNMBR AND  
   SD_Inv_Adj.LOCNCODE = @LOCNCODE AND   
   SD_Inv_Adj.SDADJTYPE = 0  
  

 SELECT @PosAdj = ISNULL(SUM(IV_TRX_WORK_LINE.TRXQTY * IV_UofM_SETP_DTL.QTYBSUOM),0) FROM   
 SD10201 SD_Inv_Adj  
 INNER JOIN IV10001 IV_TRX_WORK_LINE ON (  
           IV_TRX_WORK_LINE.IVDOCNBR = SD_Inv_Adj.IVDOCNBR AND  
           IV_TRX_WORK_LINE.IVDOCTYP = SD_Inv_Adj.IVDOCTYP AND  
           IV_TRX_WORK_LINE.LNSEQNBR = SD_Inv_Adj.SEQNUMBR  
             )  
 INNER JOIN IV00101 IV_Item_MSTR ON IV_Item_MSTR.ITEMNMBR = IV_TRX_WORK_LINE.ITEMNMBR  
 INNER JOIN IV40202 IV_UofM_SETP_DTL ON IV_Item_MSTR.UOMSCHDL = IV_UofM_SETP_DTL.UOMSCHDL  
 WHERE IV_UofM_SETP_DTL.QTYBSUOM <> 0 AND   
   IV_UofM_SETP_DTL.UOFM = IV_TRX_WORK_LINE.UOFM AND  
   SD_Inv_Adj.ITEMNMBR = @ITEMNMBR AND  
   SD_Inv_Adj.LOCNCODE = @LOCNCODE AND   
   SD_Inv_Adj.SDADJTYPE <> 0  

SELECT @ShpdNotTrsfd = @NegAdj - @PosAdj

END    

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[SD_Calculate_Shipped_Not_Transfered] TO [DYNGRP]
GO 

/*End_SD_Calculate_Shipped_Not_Transfered*/
/*Begin_sdPRTransInq*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdPRTransInq]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdPRTransInq]
GO

create  procedure sdPRTransInq  
@TBName varchar(25),
@NumTables	smallint,
@DocType smallint,
@IsPackSlip tinyint,
@O_SQL_Error_State int = NULL  output
as

begin

exec('truncate table '+@TBName+'')
if @NumTables=1 or 	@NumTables=4 or @NumTables=5 or @NumTables=7
exec ('insert into '+@TBName +'(DOCNUMBR) 
select distinct SD10203.POPRCTNM
from SD10203 inner join POP10300 on SD10203.POPRCTNM=POP10300.POPRCTNM and SD10203.POPTYPE=POP10300.POPTYPE where SD10203.POPTYPE='+@DocType)

if @NumTables=2 or 	@NumTables=4 or @NumTables=6 or @NumTables=7
exec ('insert into '+@TBName +'(DOCNUMBR) 
select distinct SD10203.POPRCTNM
from SD10203  inner join POP30300 on SD10203.POPRCTNM=POP30300.POPRCTNM and SD10203.POPTYPE=POP30300.POPTYPE where SD10203.POPTYPE='+@DocType+' and POP30300.VOIDSTTS=0 and POP30300.TRXSORCE not like ''SDPRV%''')

if @NumTables=3 or 	@NumTables=5  or @NumTables=6 or @NumTables=7
exec ('insert into '+@TBName +'(DOCNUMBR) 
select distinct POP30300.POPRCTNM
from POP30300  where   POP30300.POPTYPE='+@DocType+' and  POP30300.TRXSORCE like ''SDPRV%''')

if @IsPackSlip=1
exec('update '+ @TBName + ' set DOCNUMBR=SD10102.SD_GP_DocNumber  from '+ @TBName + ' inner join SD10102 
on ' + @TBName +'.DOCNUMBR=SD10102.SOPNUMBE and SD10102.SOPTYPE=8')

end
go
set quoted_identifier on 
go
set ansi_nulls on 
go

grant execute on [dbo].[sdPRTransInq] to [DYNGRP] 
go 

/*End_sdPRTransInq*/
/*Begin_SD_Get_ShippingDocument_InvoiceDocumentType*/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SD_Get_ShippingDocument_InvoiceDocumentType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SD_Get_ShippingDocument_InvoiceDocumentType]
GO

Create Procedure [dbo].[SD_Get_ShippingDocument_InvoiceDocumentType]
(
@SOPNumber			char(21),
@SOPType			smallint,
@PreInvoice			char(20),
@CombinedInvoice	char(20),
@Normal				char(20),
@OUT_DocumentType	char(20) output
)
As

if exists(select * from SD10301 where MSTRNUMB in(select MSTRNUMB from SOP10100 where SOPNUMBE = @SOPNumber and SOPTYPE = @SOPType))
	Begin
		if exists (select * from SD10301 where SOPNUMBE = @SOPNumber)
			select @OUT_DocumentType = @PreInvoice
		else
			select @OUT_DocumentType = @Normal
	End
else if exists(select * from SD10301 where MSTRNUMB in(select MSTRNUMB from SOP30200 where SOPNUMBE = @SOPNumber and SOPTYPE = @SOPType))
	Begin
		if exists (select * from SD10301 where SOPNUMBE = @SOPNumber)
			select @OUT_DocumentType = @PreInvoice
		else
			select @OUT_DocumentType = @Normal
	End

else if exists(select * from SD10300 where SDINVNUM = @SOPNumber)
	Begin
		select @OUT_DocumentType = @CombinedInvoice
	End

else if exists (select * from SD10200 where SOPNUMBE = @SOPNumber)
	Begin
		select @OUT_DocumentType = @Normal
	End

else
	Begin
		select @OUT_DocumentType = ''
	End
return

GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[SD_Get_ShippingDocument_InvoiceDocumentType] TO [DYNGRP] 
GO
/*End_SD_Get_ShippingDocument_InvoiceDocumentType*/
/*Begin_sdcdIVEdit*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdcdIVEdit]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdcdIVEdit]
GO

create  procedure sdcdIVEdit  
@TBName varchar(25),
@DocType smallint,
@O_SQL_Error_State int = NULL  output
as
begin
exec('truncate table '+@TBName+'')
if @DocType=1
begin
exec ('insert into '+@TBName +'(IVDOCTYP,DOCNUMBR) 
select distinct SD10204.IVDOCTYP,SD10204.IVDOCNBR
from SD10204 inner join IV30200 on  SD10204.IVDOCTYP=3 and SD10204.SDCRPSTGSTATS=2 and  SD10204.IVDOCTYP=IV30200.IVDOCTYP and SD10204.IVDOCNBR=IV30200.DOCNUMBR')
end
else if @DocType=2
begin
exec ('insert into '+@TBName +'(IVDOCTYP,DOCNUMBR)   
select distinct 4,ORDDOCID  
from SVC30700   where ORDDOCID in(select ORDDOCID from SD10106 where SD10106.ORDDOCID=SVC30700.ORDDOCID)')  
end
end
go
set quoted_identifier on 
go
set ansi_nulls on 
go

grant execute on [dbo].[sdcdIVEdit] to [DYNGRP] 
go 

/*End_sdcdIVEdit*/
/*Begin_sdcdIVTransEditBrowse*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdcdIVTransEditBrowse]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdcdIVTransEditBrowse]
go

create  procedure sdcdIVTransEditBrowse 
@DocNum varchar(25),
@BrowseType	smallint,
@DocType   smallint,
@DocNum1 varchar(25) output,
@O_SQL_Error_State int = NULL  output
as
begin
if @DocType=1 
begin

if @BrowseType=1
set @DocNum1=(select min(SD10204.IVDOCNBR) from SD10204 inner join IV30200 on  SD10204.IVDOCTYP=3 and SD10204.SDCRPSTGSTATS=2 and  SD10204.IVDOCTYP=IV30200.IVDOCTYP and SD10204.IVDOCNBR=IV30200.DOCNUMBR)

if @BrowseType=2 
set @DocNum1=(select top 1(SD10204.IVDOCNBR) from SD10204 inner join IV30200 on  SD10204.IVDOCTYP=3 and SD10204.SDCRPSTGSTATS=2 and  SD10204.IVDOCTYP=IV30200.IVDOCTYP and SD10204.IVDOCNBR=IV30200.DOCNUMBR where SD10204.IVDOCNBR<@DocNum order by SD10204.IVDOCNBR desc)

if @BrowseType=3 
set @DocNum1=(select top 1(SD10204.IVDOCNBR) from SD10204 inner join IV30200 on  SD10204.IVDOCTYP=3 and SD10204.SDCRPSTGSTATS=2 and  SD10204.IVDOCTYP=IV30200.IVDOCTYP and SD10204.IVDOCNBR=IV30200.DOCNUMBR where SD10204.IVDOCNBR>@DocNum order by SD10204.IVDOCNBR asc)

if @BrowseType=4 
set @DocNum1=(select max(SD10204.IVDOCNBR) from SD10204 inner join IV30200 on  SD10204.IVDOCTYP=3 and SD10204.SDCRPSTGSTATS=2 and  SD10204.IVDOCTYP=IV30200.IVDOCTYP and SD10204.IVDOCNBR=IV30200.DOCNUMBR)
end
else   
begin
if @BrowseType=1
set @DocNum1=(select min(SD10106.ORDDOCID) from SD10106   where ORDDOCID in(select ORDDOCID from SVC30700  where SVC30700.ORDDOCID=SD10106.ORDDOCID))  

if @BrowseType=2
set @DocNum1=(select top 1 (SD10106.ORDDOCID) from SD10106   where ORDDOCID<@DocNum and ORDDOCID in(select ORDDOCID from SVC30700  where SVC30700.ORDDOCID=SD10106.ORDDOCID) order by SD10106.ORDDOCID desc)  

if @BrowseType=3
set @DocNum1=(select top 1 (SD10106.ORDDOCID) from SD10106   where ORDDOCID>@DocNum and ORDDOCID in(select ORDDOCID from SVC30700  where SVC30700.ORDDOCID=SD10106.ORDDOCID)  order by SD10106.ORDDOCID asc)

if @BrowseType=4
set @DocNum1=(select max(SD10106.ORDDOCID) from SD10106   where ORDDOCID in(select ORDDOCID from SVC30700  where SVC30700.ORDDOCID=SD10106.ORDDOCID))  
end

END


GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON [dbo].[sdcdIVTransEditBrowse] TO [DYNGRP] 
GO 

/*End_sdcdIVTransEditBrowse*/
/*Begin_sdcdPurRetEdit*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdcdPurRetEdit]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdcdPurRetEdit]
GO

create  procedure sdcdPurRetEdit  
 @TBName varchar(25),
 @DocType smallint,
 @O_SQL_Error_State int = NULL  output
as

begin

exec('truncate table '+@TBName+'')
exec ('insert into '+@TBName +'(DOCNUMBR) 
select distinct SD10203.POPRCTNM
from SD10203  inner join POP30300 on SD10203.POPRCTNM=POP30300.POPRCTNM and SD10203.POPTYPE=POP30300.POPTYPE where SD10203.POPTYPE='+@DocType+' and SD10203.SDCRPSTGSTATS=2')
end
go
set quoted_identifier on 
go
set ansi_nulls on 
go

grant execute on [dbo].[sdcdPurRetEdit] to [DYNGRP] 
go 
/*End_sdcdPurRetEdit*/
/*Begin_sdcdPurRetEditBrowse*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[sdcdPurRetEditBrowse]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[sdcdPurRetEditBrowse]
go

create  procedure sdcdPurRetEditBrowse 
 @DocNum varchar(25),
 @BrowseType	smallint,
 @DocType   smallint,
 @DocNum1 varchar(25) output,
 @O_SQL_Error_State int = NULL  output
as

begin

if @BrowseType=1
set @DocNum1=(select min(SD10203.POPRCTNM) from SD10203 inner join POP30300 on   SD10203.POPRCTNM=POP30300.POPRCTNM and SD10203.POPTYPE=POP30300.POPTYPE where SD10203.POPTYPE=''+@DocType+'' and SD10203.SDCRPSTGSTATS=2)

if @BrowseType=2 
set @DocNum1=(select top 1(SD10203.POPRCTNM) from SD10203 inner join POP30300 on  SD10203.POPRCTNM=POP30300.POPRCTNM and SD10203.POPTYPE=POP30300.POPTYPE where SD10203.POPTYPE=''+@DocType+'' and SD10203.SDCRPSTGSTATS=2  and SD10203.POPRCTNM<@DocNum order by SD10203.POPRCTNM desc)

if @BrowseType=3 
set @DocNum1=(select top 1(SD10203.POPRCTNM) from SD10203 inner join POP30300 on  SD10203.POPRCTNM=POP30300.POPRCTNM and SD10203.POPTYPE=POP30300.POPTYPE where SD10203.POPTYPE=''+@DocType+'' and SD10203.SDCRPSTGSTATS=2  and SD10203.POPRCTNM>@DocNum order by SD10203.POPRCTNM asc)

if @BrowseType=4 
set @DocNum1=(select max(SD10203.POPRCTNM) from SD10203 inner join POP30300 on   SD10203.POPRCTNM=POP30300.POPRCTNM and SD10203.POPTYPE=POP30300.POPTYPE where SD10203.POPTYPE=''+@DocType+'' and SD10203.SDCRPSTGSTATS=2)

end
go
set quoted_identifier on
go
set ansi_nulls on 
go

grant execute on [dbo].[sdcdPurRetEditBrowse] to [DYNGRP] 
go 

/*End_sdcdPurRetEditBrowse*/
/*Begin_SD_SOP_Update_Combine_Distribution*/
set quoted_identifier off 
go 
set ansi_nulls off 
go

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[SD_SOP_Update_Combine_Distribution]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[SD_SOP_Update_Combine_Distribution]
go

CREATE PROCEDURE SD_SOP_Update_Combine_Distribution
(
@TBName VARCHAR(25),
@SOP_Number VARCHAR(25)
)
As
DECLARE @DISTTYPE SMALLINT,
@ACTINDEX INT,
@DEBITAMT NUMERIC(19,5),
@CREDITAMT NUMERIC(19,5),
@ORGCRDTAMT NUMERIC(19,5),
@ORGDBTAMT NUMERIC(19,5),
@SeqNumber INT,
@CURRNIDX SMALLINT
SELECT @SeqNumber = 16384

EXEC('DECLARE C CURSOR FAST_FORWARD FOR  
      SELECT DISTTYPE,ACTINDX,CURRNIDX,sum(DEBITAMT),sum(CRDTAMNT),sum(ORDBTAMT),sum(ORCRDAMT) FROM SOP10102 WHERE SOPNUMBE IN(SELECT SOPNUMBE FROM ' + @TBName + ' WHERE MKTOPROC=1)Group by DISTTYPE,ACTINDX,CURRNIDX')
OPEN C 
FETCH NEXT FROM C INTO @DISTTYPE,@ACTINDEX,@CURRNIDX,@DEBITAMT,@CREDITAMT,@ORGDBTAMT,@ORGCRDTAMT
WHILE @@FETCH_STATUS=0 
    BEGIN 
          INSERT INTO SOP10102(SOPTYPE,SOPNUMBE,SEQNUMBR,DISTTYPE,ACTINDX,DEBITAMT,ORDBTAMT,CRDTAMNT,ORCRDAMT,CURRNIDX)
                 VALUES(3,@SOP_Number,@SeqNumber,@DISTTYPE,@ACTINDEX,@DEBITAMT,@ORGDBTAMT,@CREDITAMT,@ORGCRDTAMT,@CURRNIDX)

          FETCH NEXT FROM C INTO @DISTTYPE,@ACTINDEX,@CURRNIDX,@DEBITAMT,@CREDITAMT,@ORGDBTAMT,@ORGCRDTAMT
	      /*Increment the SeqNumber*/
          SET @SeqNumber=@SeqNumber+16384;
    END 
CLOSE C 
DEALLOCATE C
go
set quoted_identifier on
go
set ansi_nulls on 
go

grant execute on [dbo].[SD_SOP_Update_Combine_Distribution] to [DYNGRP] 
go 

/*End_SD_SOP_Update_Combine_Distribution*/